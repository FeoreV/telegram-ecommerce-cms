name: Security Scanning

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main, develop ]

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        path: [backend, frontend, bot]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run npm audit
        working-directory: ${{ matrix.path }}
        run: |
          npm audit --audit-level=high || true
          npm audit --json > audit-report.json

      - name: Upload audit report
        uses: actions/upload-artifact@v3
        with:
          name: npm-audit-${{ matrix.path }}
          path: ${{ matrix.path }}/audit-report.json

  docker-scan:
    name: Docker Image Scan
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [backend, frontend, bot]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t telegram-ecommerce-${{ matrix.service }}:scan \
            -f ${{ matrix.service }}/Dockerfile${{ matrix.service == 'backend' && '.production' || '' }} \
            ${{ matrix.service }}

      - name: Run Trivy scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: telegram-ecommerce-${{ matrix.service }}:scan
          format: 'sarif'
          output: 'trivy-${{ matrix.service }}.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-${{ matrix.service }}.sarif'

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  sast-scan:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install license-checker
        run: npm install -g license-checker

      - name: Check backend licenses
        working-directory: backend
        run: |
          npm ci
          license-checker --json --out licenses-backend.json

      - name: Check frontend licenses
        working-directory: frontend
        run: |
          npm ci
          license-checker --json --out licenses-frontend.json

      - name: Upload license reports
        uses: actions/upload-artifact@v3
        with:
          name: license-reports
          path: |
            backend/licenses-backend.json
            frontend/licenses-frontend.json

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-scan, docker-scan, secret-scan, sast-scan]
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Generate summary report
        run: |
          echo "# Security Scan Summary" > security-report.md
          echo "" >> security-report.md
          echo "Generated: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "## Scans Completed" >> security-report.md
          echo "- Dependency Scan: âœ…" >> security-report.md
          echo "- Docker Image Scan: âœ…" >> security-report.md
          echo "- Secret Scan: âœ…" >> security-report.md
          echo "- SAST Scan: âœ…" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md

      - name: Notify security team
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: 'ðŸš¨ Security scan found critical issues!'
          webhook_url: ${{ secrets.SLACK_SECURITY_WEBHOOK }}
