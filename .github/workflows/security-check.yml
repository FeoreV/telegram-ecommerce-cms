# Security Check CI/CD Pipeline
# Runs automated security checks on every push and PR

name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        directory: [backend, frontend, bot]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.directory }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.directory }}
        run: npm ci

      - name: Run npm audit
        working-directory: ${{ matrix.directory }}
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Check for vulnerabilities
        working-directory: ${{ matrix.directory }}
        run: npm audit --json > audit-${{ matrix.directory }}.json
        continue-on-error: true

      - name: Upload audit results
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-${{ matrix.directory }}
          path: ${{ matrix.directory }}/audit-${{ matrix.directory }}.json

  code-security-scan:
    name: Code Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Run custom security audit
        working-directory: backend
        run: node scripts/security-audit.js

      - name: Check for eval() usage
        run: |
          if grep -r "eval(" backend/src --include="*.ts" --include="*.js"; then
            echo "❌ Found eval() usage in code"
            exit 1
          else
            echo "✅ No eval() found"
          fi

      - name: Check for hardcoded secrets
        run: |
          if grep -r -E "(password|secret|api_key|token)\s*=\s*['\"][^'\"]{20,}['\"]" backend/src --include="*.ts" --include="*.js" | grep -v "process.env"; then
            echo "❌ Potential hardcoded secrets found"
            exit 1
          else
            echo "✅ No hardcoded secrets found"
          fi

      - name: Check for .env files in git
        run: |
          if git ls-files | grep -E "\.env$"; then
            echo "❌ .env files found in git"
            exit 1
          else
            echo "✅ No .env files in git"
          fi

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Run security tests
        working-directory: backend
        run: npm test -- security.test.ts --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: backend/coverage/lcov.info
          flags: security-tests

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      matrix:
        language: [ 'javascript', 'typescript' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [security-audit, code-security-scan, security-tests]
    if: always()

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Generate summary
        run: |
          echo "# Security Check Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Results" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ NPM Audit: Passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code Scan: Passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Security Tests: Passed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All security checks completed successfully! 🛡️" >> $GITHUB_STEP_SUMMARY

  # Notify on failure
  notify-on-failure:
    name: Notify Security Issues
    runs-on: ubuntu-latest
    needs: [security-audit, code-security-scan, security-tests]
    if: failure()

    steps:
      - name: Create Issue
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🔒 Security Check Failed',
              body: `Security checks failed in workflow run: ${context.runId}\n\nPlease review and fix the security issues.`,
              labels: ['security', 'high-priority']
            })

