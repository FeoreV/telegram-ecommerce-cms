#!/bin/bash
# Pre-commit hook for security checks
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∫–æ–º–º–∏—Ç–æ–º

echo "üîç –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º..."
echo ""

ERRORS=0

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã –≤ staged —Ñ–∞–π–ª–∞—Ö
echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã..."
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

for file in $STAGED_FILES; do
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã lock, dist, node_modules
    if [[ "$file" =~ (lock\.json|dist/|node_modules/|\.map$) ]]; then
        continue
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã
    if grep -qE "(password|secret|token|api_key)\s*[:=]\s*['\"][^'\"]{8,}['\"]" "$file" 2>/dev/null; then
        # –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –ø—Ä–∏–º–µ—Ä—ã
        if ! echo "$file" | grep -qE "(test|spec|example|mock)"; then
            echo "‚ö†Ô∏è  –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –≤: $file"
            ERRORS=$((ERRORS + 1))
        fi
    fi
done

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤
echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤..."
if echo "$STAGED_FILES" | grep -qE "^\.env$|\.env\.(production|local|development)$"; then
    echo "‚ùå –û–®–ò–ë–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å .env —Ñ–∞–π–ª!"
    echo "   .env —Ñ–∞–π–ª—ã —Å–æ–¥–µ—Ä–∂–∞—Ç —Å–µ–∫—Ä–µ—Ç—ã –∏ –ù–ï –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ git"
    ERRORS=$((ERRORS + 1))
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ hardcoded credentials –≤ –∫–æ–¥–µ
echo "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ hardcoded credentials..."
for file in $STAGED_FILES; do
    if [[ "$file" =~ \.(ts|js|tsx|jsx)$ ]]; then
        # –ò—â–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
        if grep -qE "const\s+(password|secret|apiKey)\s*=\s*['\"][a-zA-Z0-9]{8,}['\"]" "$file" 2>/dev/null; then
            if ! echo "$file" | grep -qE "(test|spec|mock)"; then
                echo "‚ö†Ô∏è  Hardcoded credentials –≤: $file"
                ERRORS=$((ERRORS + 1))
            fi
        fi
    fi
done

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ console.log –≤ –ø—Ä–æ–¥–∞–∫—à–Ω –∫–æ–¥–µ (–¥–ª—è TypeScript/JavaScript)
echo "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ debug –∫–æ–¥..."
for file in $STAGED_FILES; do
    if [[ "$file" =~ \.(ts|js|tsx|jsx)$ ]] && [[ ! "$file" =~ (test|spec|\.d\.ts)$ ]]; then
        if grep -qE "console\.(log|debug|info)" "$file" 2>/dev/null; then
            echo "‚ö†Ô∏è  console.log –Ω–∞–π–¥–µ–Ω –≤: $file (—É–¥–∞–ª–∏—Ç–µ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–æ–º)"
            # –≠—Ç–æ warning, –Ω–µ error
        fi
    fi
done

echo ""
if [ $ERRORS -gt 0 ]; then
    echo "‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã: $ERRORS –æ—à–∏–±–æ–∫"
    echo ""
    echo "–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ --no-verify –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ (–ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø)"
    exit 1
else
    echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
    exit 0
fi

