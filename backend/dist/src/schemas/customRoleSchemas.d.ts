import { z } from 'zod';
export declare const CreateCustomRoleSchema: z.ZodObject<{
    storeId: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    permissions: z.ZodArray<z.ZodString>;
    color: z.ZodDefault<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export declare const UpdateCustomRoleSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    permissions: z.ZodOptional<z.ZodArray<z.ZodString>>;
    color: z.ZodOptional<z.ZodString>;
    icon: z.ZodOptional<z.ZodString>;
    isActive: z.ZodOptional<z.ZodBoolean>;
}, z.core.$strip>;
export declare const CustomRoleSearchSchema: z.ZodObject<{
    storeId: z.ZodString;
    search: z.ZodOptional<z.ZodString>;
    isActive: z.ZodOptional<z.ZodBoolean>;
    page: z.ZodDefault<z.ZodCoercedNumber<unknown>>;
    limit: z.ZodDefault<z.ZodCoercedNumber<unknown>>;
}, z.core.$strip>;
export declare const AssignCustomRoleSchema: z.ZodObject<{
    userId: z.ZodString;
    storeId: z.ZodString;
    customRoleId: z.ZodString;
}, z.core.$strip>;
export type CreateCustomRole = z.infer<typeof CreateCustomRoleSchema>;
export type UpdateCustomRole = z.infer<typeof UpdateCustomRoleSchema>;
export type CustomRoleSearch = z.infer<typeof CustomRoleSearchSchema>;
export type AssignCustomRole = z.infer<typeof AssignCustomRoleSchema>;
export declare const AVAILABLE_PERMISSIONS: readonly [{
    readonly value: "PRODUCT_CREATE";
    readonly label: "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤";
    readonly category: "products";
}, {
    readonly value: "PRODUCT_UPDATE";
    readonly label: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤";
    readonly category: "products";
}, {
    readonly value: "PRODUCT_DELETE";
    readonly label: "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤";
    readonly category: "products";
}, {
    readonly value: "PRODUCT_VIEW";
    readonly label: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–æ–≤–∞—Ä–æ–≤";
    readonly category: "products";
}, {
    readonly value: "ORDER_VIEW";
    readonly label: "–ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤";
    readonly category: "orders";
}, {
    readonly value: "ORDER_UPDATE";
    readonly label: "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤";
    readonly category: "orders";
}, {
    readonly value: "ORDER_CONFIRM";
    readonly label: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤";
    readonly category: "orders";
}, {
    readonly value: "ORDER_REJECT";
    readonly label: "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤";
    readonly category: "orders";
}, {
    readonly value: "ORDER_DELETE";
    readonly label: "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤";
    readonly category: "orders";
}, {
    readonly value: "INVENTORY_VIEW";
    readonly label: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–∫–ª–∞–¥–∞";
    readonly category: "inventory";
}, {
    readonly value: "INVENTORY_UPDATE";
    readonly label: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º";
    readonly category: "inventory";
}, {
    readonly value: "ANALYTICS_VIEW";
    readonly label: "–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏";
    readonly category: "analytics";
}, {
    readonly value: "ANALYTICS_EXPORT";
    readonly label: "–≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤";
    readonly category: "analytics";
}, {
    readonly value: "USER_VIEW";
    readonly label: "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π";
    readonly category: "users";
}, {
    readonly value: "USER_UPDATE";
    readonly label: "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π";
    readonly category: "users";
}, {
    readonly value: "USER_CREATE";
    readonly label: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π";
    readonly category: "users";
}, {
    readonly value: "STORE_VIEW";
    readonly label: "–ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞";
    readonly category: "store";
}, {
    readonly value: "STORE_UPDATE";
    readonly label: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –º–∞–≥–∞–∑–∏–Ω–∞";
    readonly category: "store";
}, {
    readonly value: "NOTIFICATION_SEND";
    readonly label: "–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π";
    readonly category: "notifications";
}, {
    readonly value: "BOT_MANAGE";
    readonly label: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º";
    readonly category: "bots";
}, {
    readonly value: "BOT_CONFIG";
    readonly label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞";
    readonly category: "bots";
}];
export declare const PERMISSION_CATEGORIES: readonly [{
    readonly key: "products";
    readonly label: "–¢–æ–≤–∞—Ä—ã";
    readonly icon: "üì¶";
    readonly color: "#3b82f6";
}, {
    readonly key: "orders";
    readonly label: "–ó–∞–∫–∞–∑—ã";
    readonly icon: "üìã";
    readonly color: "#10b981";
}, {
    readonly key: "inventory";
    readonly label: "–°–∫–ª–∞–¥";
    readonly icon: "üìä";
    readonly color: "#f59e0b";
}, {
    readonly key: "analytics";
    readonly label: "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞";
    readonly icon: "üìà";
    readonly color: "#8b5cf6";
}, {
    readonly key: "users";
    readonly label: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏";
    readonly icon: "üë•";
    readonly color: "#ef4444";
}, {
    readonly key: "store";
    readonly label: "–ú–∞–≥–∞–∑–∏–Ω";
    readonly icon: "üè™";
    readonly color: "#06b6d4";
}, {
    readonly key: "notifications";
    readonly label: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
    readonly icon: "üîî";
    readonly color: "#84cc16";
}, {
    readonly key: "bots";
    readonly label: "–ë–æ—Ç—ã";
    readonly icon: "ü§ñ";
    readonly color: "#ec4899";
}];
//# sourceMappingURL=customRoleSchemas.d.ts.map