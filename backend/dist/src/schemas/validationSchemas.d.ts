import { z } from 'zod';
export declare const commonSchemas: {
    uuid: z.ZodString;
    email: z.ZodString;
    phone: z.ZodString;
    url: z.ZodString;
    username: z.ZodString;
    password: z.ZodString;
    shortText: z.ZodString;
    mediumText: z.ZodString;
    longText: z.ZodString;
    positiveInt: z.ZodNumber;
    nonNegativeInt: z.ZodNumber;
    price: z.ZodNumber;
    pastDate: z.ZodDate;
    futureDate: z.ZodDate;
    fileUpload: z.ZodObject<{
        filename: z.ZodString;
        mimetype: z.ZodString;
        size: z.ZodNumber;
    }, z.core.$strip>;
};
export declare const userSchemas: {
    register: z.ZodObject<{
        username: z.ZodString;
        email: z.ZodString;
        password: z.ZodString;
        firstName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        acceptTerms: z.ZodBoolean;
    }, z.core.$strip>;
    login: z.ZodObject<{
        email: z.ZodString;
        password: z.ZodString;
    }, z.core.$strip>;
    updateProfile: z.ZodObject<{
        firstName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        bio: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    changePassword: z.ZodObject<{
        currentPassword: z.ZodString;
        newPassword: z.ZodString;
        confirmPassword: z.ZodString;
    }, z.core.$strip>;
    telegramAuth: z.ZodObject<{
        id: z.ZodNumber;
        first_name: z.ZodOptional<z.ZodString>;
        last_name: z.ZodOptional<z.ZodString>;
        username: z.ZodOptional<z.ZodString>;
        photo_url: z.ZodOptional<z.ZodString>;
        auth_date: z.ZodNumber;
        hash: z.ZodString;
    }, z.core.$strip>;
};
export declare const storeSchemas: {
    create: z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        currency: z.ZodString;
        timezone: z.ZodString;
        language: z.ZodString;
        settings: z.ZodOptional<z.ZodObject<{
            allowGuestOrders: z.ZodDefault<z.ZodBoolean>;
            requirePhoneVerification: z.ZodDefault<z.ZodBoolean>;
            enableInventoryTracking: z.ZodDefault<z.ZodBoolean>;
            autoApproveOrders: z.ZodDefault<z.ZodBoolean>;
        }, z.core.$strip>>;
    }, z.core.$strip>;
    update: z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        currency: z.ZodOptional<z.ZodString>;
        timezone: z.ZodOptional<z.ZodString>;
        language: z.ZodOptional<z.ZodString>;
        isActive: z.ZodOptional<z.ZodBoolean>;
        settings: z.ZodOptional<z.ZodObject<{
            allowGuestOrders: z.ZodOptional<z.ZodBoolean>;
            requirePhoneVerification: z.ZodOptional<z.ZodBoolean>;
            enableInventoryTracking: z.ZodOptional<z.ZodBoolean>;
            autoApproveOrders: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strip>>;
    }, z.core.$strip>;
    telegramBot: z.ZodObject<{
        botToken: z.ZodString;
        webhookUrl: z.ZodOptional<z.ZodString>;
        secretToken: z.ZodString;
        settings: z.ZodOptional<z.ZodObject<{
            enableNotifications: z.ZodDefault<z.ZodBoolean>;
            enableOrderUpdates: z.ZodDefault<z.ZodBoolean>;
            enableInventoryAlerts: z.ZodDefault<z.ZodBoolean>;
            enablePaymentNotifications: z.ZodDefault<z.ZodBoolean>;
        }, z.core.$strip>>;
    }, z.core.$strip>;
};
export declare const productSchemas: {
    create: z.ZodObject<{
        name: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        price: z.ZodNumber;
        compareAtPrice: z.ZodOptional<z.ZodNumber>;
        sku: z.ZodOptional<z.ZodString>;
        barcode: z.ZodOptional<z.ZodString>;
        weight: z.ZodOptional<z.ZodNumber>;
        dimensions: z.ZodOptional<z.ZodObject<{
            length: z.ZodOptional<z.ZodNumber>;
            width: z.ZodOptional<z.ZodNumber>;
            height: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strip>>;
        category: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString>>;
        isActive: z.ZodDefault<z.ZodBoolean>;
        trackQuantity: z.ZodDefault<z.ZodBoolean>;
        quantity: z.ZodOptional<z.ZodNumber>;
        lowStockThreshold: z.ZodOptional<z.ZodNumber>;
        images: z.ZodOptional<z.ZodArray<z.ZodString>>;
    }, z.core.$strip>;
    update: z.ZodObject<{
        name: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        price: z.ZodOptional<z.ZodNumber>;
        compareAtPrice: z.ZodOptional<z.ZodNumber>;
        sku: z.ZodOptional<z.ZodString>;
        barcode: z.ZodOptional<z.ZodString>;
        weight: z.ZodOptional<z.ZodNumber>;
        dimensions: z.ZodOptional<z.ZodObject<{
            length: z.ZodOptional<z.ZodNumber>;
            width: z.ZodOptional<z.ZodNumber>;
            height: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strip>>;
        category: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString>>;
        isActive: z.ZodOptional<z.ZodBoolean>;
        trackQuantity: z.ZodOptional<z.ZodBoolean>;
        quantity: z.ZodOptional<z.ZodNumber>;
        lowStockThreshold: z.ZodOptional<z.ZodNumber>;
        images: z.ZodOptional<z.ZodArray<z.ZodString>>;
    }, z.core.$strip>;
    variant: z.ZodObject<{
        name: z.ZodString;
        price: z.ZodOptional<z.ZodNumber>;
        sku: z.ZodOptional<z.ZodString>;
        barcode: z.ZodOptional<z.ZodString>;
        weight: z.ZodOptional<z.ZodNumber>;
        quantity: z.ZodOptional<z.ZodNumber>;
        options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
    }, z.core.$strip>;
};
export declare const orderSchemas: {
    create: z.ZodObject<{
        customerId: z.ZodOptional<z.ZodString>;
        customerInfo: z.ZodObject<{
            firstName: z.ZodString;
            lastName: z.ZodOptional<z.ZodString>;
            email: z.ZodOptional<z.ZodString>;
            phone: z.ZodString;
            telegramId: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strip>;
        items: z.ZodArray<z.ZodObject<{
            productId: z.ZodString;
            variantId: z.ZodOptional<z.ZodString>;
            quantity: z.ZodNumber;
            price: z.ZodNumber;
            name: z.ZodString;
        }, z.core.$strip>>;
        shippingAddress: z.ZodObject<{
            street: z.ZodString;
            city: z.ZodString;
            state: z.ZodOptional<z.ZodString>;
            postalCode: z.ZodOptional<z.ZodString>;
            country: z.ZodString;
            additionalInfo: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
        paymentMethod: z.ZodEnum<{
            card: "card";
            other: "other";
            cash: "cash";
            bank_transfer: "bank_transfer";
            crypto: "crypto";
        }>;
        notes: z.ZodOptional<z.ZodString>;
        discountCode: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    updateStatus: z.ZodObject<{
        status: z.ZodEnum<{
            PENDING_ADMIN: "PENDING_ADMIN";
            PAID: "PAID";
            SHIPPED: "SHIPPED";
            DELIVERED: "DELIVERED";
            CANCELLED: "CANCELLED";
        }>;
        notes: z.ZodOptional<z.ZodString>;
        trackingNumber: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
    paymentProof: z.ZodObject<{
        paymentMethod: z.ZodEnum<{
            card: "card";
            other: "other";
            cash: "cash";
            bank_transfer: "bank_transfer";
            crypto: "crypto";
        }>;
        transactionId: z.ZodOptional<z.ZodString>;
        amount: z.ZodNumber;
        currency: z.ZodString;
        proofImages: z.ZodOptional<z.ZodArray<z.ZodString>>;
        notes: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
};
export declare const telegramSchemas: {
    webhook: z.ZodObject<{
        update_id: z.ZodNumber;
        message: z.ZodOptional<z.ZodObject<{
            message_id: z.ZodNumber;
            from: z.ZodObject<{
                id: z.ZodNumber;
                is_bot: z.ZodOptional<z.ZodBoolean>;
                first_name: z.ZodString;
                last_name: z.ZodOptional<z.ZodString>;
                username: z.ZodOptional<z.ZodString>;
                language_code: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>;
            chat: z.ZodObject<{
                id: z.ZodNumber;
                type: z.ZodEnum<{
                    private: "private";
                    channel: "channel";
                    group: "group";
                    supergroup: "supergroup";
                }>;
                title: z.ZodOptional<z.ZodString>;
                username: z.ZodOptional<z.ZodString>;
                first_name: z.ZodOptional<z.ZodString>;
                last_name: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>;
            date: z.ZodNumber;
            text: z.ZodOptional<z.ZodString>;
            entities: z.ZodOptional<z.ZodArray<z.ZodObject<{
                type: z.ZodString;
                offset: z.ZodNumber;
                length: z.ZodNumber;
                url: z.ZodOptional<z.ZodString>;
                user: z.ZodOptional<z.ZodObject<{
                    id: z.ZodNumber;
                    first_name: z.ZodString;
                }, z.core.$strip>>;
            }, z.core.$strip>>>;
        }, z.core.$strip>>;
        callback_query: z.ZodOptional<z.ZodObject<{
            id: z.ZodString;
            from: z.ZodObject<{
                id: z.ZodNumber;
                first_name: z.ZodString;
                username: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>;
            message: z.ZodOptional<z.ZodObject<{
                message_id: z.ZodNumber;
                chat: z.ZodObject<{
                    id: z.ZodNumber;
                    type: z.ZodEnum<{
                        private: "private";
                        channel: "channel";
                        group: "group";
                        supergroup: "supergroup";
                    }>;
                }, z.core.$strip>;
            }, z.core.$strip>>;
            data: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>>;
    }, z.core.$strip>;
    sendMessage: z.ZodObject<{
        chat_id: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
        text: z.ZodString;
        parse_mode: z.ZodOptional<z.ZodEnum<{
            Markdown: "Markdown";
            MarkdownV2: "MarkdownV2";
            HTML: "HTML";
        }>>;
        disable_web_page_preview: z.ZodOptional<z.ZodBoolean>;
        disable_notification: z.ZodOptional<z.ZodBoolean>;
        reply_to_message_id: z.ZodOptional<z.ZodNumber>;
        reply_markup: z.ZodOptional<z.ZodObject<{
            inline_keyboard: z.ZodOptional<z.ZodArray<z.ZodArray<z.ZodObject<{
                text: z.ZodString;
                callback_data: z.ZodOptional<z.ZodString>;
                url: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>>>>;
            keyboard: z.ZodOptional<z.ZodArray<z.ZodArray<z.ZodObject<{
                text: z.ZodString;
                request_contact: z.ZodOptional<z.ZodBoolean>;
                request_location: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$strip>>>>;
            resize_keyboard: z.ZodOptional<z.ZodBoolean>;
            one_time_keyboard: z.ZodOptional<z.ZodBoolean>;
            remove_keyboard: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strip>>;
    }, z.core.$strip>;
};
export declare const adminSchemas: {
    createUser: z.ZodObject<{
        username: z.ZodString;
        email: z.ZodString;
        password: z.ZodString;
        role: z.ZodEnum<{
            OWNER: "OWNER";
            ADMIN: "ADMIN";
            VENDOR: "VENDOR";
            CUSTOMER: "CUSTOMER";
        }>;
        storeId: z.ZodOptional<z.ZodString>;
        firstName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        isActive: z.ZodDefault<z.ZodBoolean>;
    }, z.core.$strip>;
    updateUser: z.ZodObject<{
        username: z.ZodOptional<z.ZodString>;
        email: z.ZodOptional<z.ZodString>;
        role: z.ZodOptional<z.ZodEnum<{
            OWNER: "OWNER";
            ADMIN: "ADMIN";
            VENDOR: "VENDOR";
            CUSTOMER: "CUSTOMER";
        }>>;
        storeId: z.ZodOptional<z.ZodString>;
        firstName: z.ZodOptional<z.ZodString>;
        lastName: z.ZodOptional<z.ZodString>;
        phone: z.ZodOptional<z.ZodString>;
        isActive: z.ZodOptional<z.ZodBoolean>;
    }, z.core.$strip>;
    systemSettings: z.ZodObject<{
        maintenanceMode: z.ZodOptional<z.ZodBoolean>;
        registrationEnabled: z.ZodOptional<z.ZodBoolean>;
        maxStoresPerUser: z.ZodOptional<z.ZodNumber>;
        maxProductsPerStore: z.ZodOptional<z.ZodNumber>;
        maxOrdersPerDay: z.ZodOptional<z.ZodNumber>;
        defaultCurrency: z.ZodOptional<z.ZodString>;
        supportedCurrencies: z.ZodOptional<z.ZodArray<z.ZodString>>;
        rateLimits: z.ZodOptional<z.ZodObject<{
            apiRequestsPerMinute: z.ZodOptional<z.ZodNumber>;
            loginAttemptsPerHour: z.ZodOptional<z.ZodNumber>;
            orderCreationsPerHour: z.ZodOptional<z.ZodNumber>;
        }, z.core.$strip>>;
    }, z.core.$strip>;
};
export declare const querySchemas: {
    pagination: z.ZodObject<{
        page: z.ZodDefault<z.ZodCoercedNumber<unknown>>;
        limit: z.ZodDefault<z.ZodCoercedNumber<unknown>>;
        sortBy: z.ZodOptional<z.ZodString>;
        sortOrder: z.ZodDefault<z.ZodEnum<{
            asc: "asc";
            desc: "desc";
        }>>;
    }, z.core.$strip>;
    search: z.ZodObject<{
        q: z.ZodOptional<z.ZodString>;
        category: z.ZodOptional<z.ZodString>;
        minPrice: z.ZodOptional<z.ZodNumber>;
        maxPrice: z.ZodOptional<z.ZodNumber>;
        inStock: z.ZodOptional<z.ZodCoercedBoolean<unknown>>;
        tags: z.ZodOptional<z.ZodPipe<z.ZodString, z.ZodTransform<string[], string>>>;
    }, z.core.$strip>;
    dateRange: z.ZodObject<{
        startDate: z.ZodOptional<z.ZodCoercedDate<unknown>>;
        endDate: z.ZodOptional<z.ZodCoercedDate<unknown>>;
        timezone: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
};
export declare const responseSchemas: {
    success: z.ZodObject<{
        success: z.ZodLiteral<true>;
        data: z.ZodAny;
        message: z.ZodOptional<z.ZodString>;
        timestamp: z.ZodString;
    }, z.core.$strip>;
    error: z.ZodObject<{
        success: z.ZodLiteral<false>;
        error: z.ZodString;
        message: z.ZodString;
        details: z.ZodOptional<z.ZodArray<z.ZodString>>;
        timestamp: z.ZodString;
    }, z.core.$strip>;
    paginated: z.ZodObject<{
        success: z.ZodLiteral<true>;
        data: z.ZodArray<z.ZodAny>;
        pagination: z.ZodObject<{
            page: z.ZodNumber;
            limit: z.ZodNumber;
            total: z.ZodNumber;
            totalPages: z.ZodNumber;
            hasNext: z.ZodBoolean;
            hasPrev: z.ZodBoolean;
        }, z.core.$strip>;
        timestamp: z.ZodString;
    }, z.core.$strip>;
};
export declare const validationSchemas: {
    common: {
        uuid: z.ZodString;
        email: z.ZodString;
        phone: z.ZodString;
        url: z.ZodString;
        username: z.ZodString;
        password: z.ZodString;
        shortText: z.ZodString;
        mediumText: z.ZodString;
        longText: z.ZodString;
        positiveInt: z.ZodNumber;
        nonNegativeInt: z.ZodNumber;
        price: z.ZodNumber;
        pastDate: z.ZodDate;
        futureDate: z.ZodDate;
        fileUpload: z.ZodObject<{
            filename: z.ZodString;
            mimetype: z.ZodString;
            size: z.ZodNumber;
        }, z.core.$strip>;
    };
    user: {
        register: z.ZodObject<{
            username: z.ZodString;
            email: z.ZodString;
            password: z.ZodString;
            firstName: z.ZodOptional<z.ZodString>;
            lastName: z.ZodOptional<z.ZodString>;
            phone: z.ZodOptional<z.ZodString>;
            acceptTerms: z.ZodBoolean;
        }, z.core.$strip>;
        login: z.ZodObject<{
            email: z.ZodString;
            password: z.ZodString;
        }, z.core.$strip>;
        updateProfile: z.ZodObject<{
            firstName: z.ZodOptional<z.ZodString>;
            lastName: z.ZodOptional<z.ZodString>;
            phone: z.ZodOptional<z.ZodString>;
            bio: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
        changePassword: z.ZodObject<{
            currentPassword: z.ZodString;
            newPassword: z.ZodString;
            confirmPassword: z.ZodString;
        }, z.core.$strip>;
        telegramAuth: z.ZodObject<{
            id: z.ZodNumber;
            first_name: z.ZodOptional<z.ZodString>;
            last_name: z.ZodOptional<z.ZodString>;
            username: z.ZodOptional<z.ZodString>;
            photo_url: z.ZodOptional<z.ZodString>;
            auth_date: z.ZodNumber;
            hash: z.ZodString;
        }, z.core.$strip>;
    };
    store: {
        create: z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            currency: z.ZodString;
            timezone: z.ZodString;
            language: z.ZodString;
            settings: z.ZodOptional<z.ZodObject<{
                allowGuestOrders: z.ZodDefault<z.ZodBoolean>;
                requirePhoneVerification: z.ZodDefault<z.ZodBoolean>;
                enableInventoryTracking: z.ZodDefault<z.ZodBoolean>;
                autoApproveOrders: z.ZodDefault<z.ZodBoolean>;
            }, z.core.$strip>>;
        }, z.core.$strip>;
        update: z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            currency: z.ZodOptional<z.ZodString>;
            timezone: z.ZodOptional<z.ZodString>;
            language: z.ZodOptional<z.ZodString>;
            isActive: z.ZodOptional<z.ZodBoolean>;
            settings: z.ZodOptional<z.ZodObject<{
                allowGuestOrders: z.ZodOptional<z.ZodBoolean>;
                requirePhoneVerification: z.ZodOptional<z.ZodBoolean>;
                enableInventoryTracking: z.ZodOptional<z.ZodBoolean>;
                autoApproveOrders: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$strip>>;
        }, z.core.$strip>;
        telegramBot: z.ZodObject<{
            botToken: z.ZodString;
            webhookUrl: z.ZodOptional<z.ZodString>;
            secretToken: z.ZodString;
            settings: z.ZodOptional<z.ZodObject<{
                enableNotifications: z.ZodDefault<z.ZodBoolean>;
                enableOrderUpdates: z.ZodDefault<z.ZodBoolean>;
                enableInventoryAlerts: z.ZodDefault<z.ZodBoolean>;
                enablePaymentNotifications: z.ZodDefault<z.ZodBoolean>;
            }, z.core.$strip>>;
        }, z.core.$strip>;
    };
    product: {
        create: z.ZodObject<{
            name: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            price: z.ZodNumber;
            compareAtPrice: z.ZodOptional<z.ZodNumber>;
            sku: z.ZodOptional<z.ZodString>;
            barcode: z.ZodOptional<z.ZodString>;
            weight: z.ZodOptional<z.ZodNumber>;
            dimensions: z.ZodOptional<z.ZodObject<{
                length: z.ZodOptional<z.ZodNumber>;
                width: z.ZodOptional<z.ZodNumber>;
                height: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strip>>;
            category: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString>>;
            isActive: z.ZodDefault<z.ZodBoolean>;
            trackQuantity: z.ZodDefault<z.ZodBoolean>;
            quantity: z.ZodOptional<z.ZodNumber>;
            lowStockThreshold: z.ZodOptional<z.ZodNumber>;
            images: z.ZodOptional<z.ZodArray<z.ZodString>>;
        }, z.core.$strip>;
        update: z.ZodObject<{
            name: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            price: z.ZodOptional<z.ZodNumber>;
            compareAtPrice: z.ZodOptional<z.ZodNumber>;
            sku: z.ZodOptional<z.ZodString>;
            barcode: z.ZodOptional<z.ZodString>;
            weight: z.ZodOptional<z.ZodNumber>;
            dimensions: z.ZodOptional<z.ZodObject<{
                length: z.ZodOptional<z.ZodNumber>;
                width: z.ZodOptional<z.ZodNumber>;
                height: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strip>>;
            category: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString>>;
            isActive: z.ZodOptional<z.ZodBoolean>;
            trackQuantity: z.ZodOptional<z.ZodBoolean>;
            quantity: z.ZodOptional<z.ZodNumber>;
            lowStockThreshold: z.ZodOptional<z.ZodNumber>;
            images: z.ZodOptional<z.ZodArray<z.ZodString>>;
        }, z.core.$strip>;
        variant: z.ZodObject<{
            name: z.ZodString;
            price: z.ZodOptional<z.ZodNumber>;
            sku: z.ZodOptional<z.ZodString>;
            barcode: z.ZodOptional<z.ZodString>;
            weight: z.ZodOptional<z.ZodNumber>;
            quantity: z.ZodOptional<z.ZodNumber>;
            options: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodString>>;
        }, z.core.$strip>;
    };
    order: {
        create: z.ZodObject<{
            customerId: z.ZodOptional<z.ZodString>;
            customerInfo: z.ZodObject<{
                firstName: z.ZodString;
                lastName: z.ZodOptional<z.ZodString>;
                email: z.ZodOptional<z.ZodString>;
                phone: z.ZodString;
                telegramId: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strip>;
            items: z.ZodArray<z.ZodObject<{
                productId: z.ZodString;
                variantId: z.ZodOptional<z.ZodString>;
                quantity: z.ZodNumber;
                price: z.ZodNumber;
                name: z.ZodString;
            }, z.core.$strip>>;
            shippingAddress: z.ZodObject<{
                street: z.ZodString;
                city: z.ZodString;
                state: z.ZodOptional<z.ZodString>;
                postalCode: z.ZodOptional<z.ZodString>;
                country: z.ZodString;
                additionalInfo: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>;
            paymentMethod: z.ZodEnum<{
                card: "card";
                other: "other";
                cash: "cash";
                bank_transfer: "bank_transfer";
                crypto: "crypto";
            }>;
            notes: z.ZodOptional<z.ZodString>;
            discountCode: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
        updateStatus: z.ZodObject<{
            status: z.ZodEnum<{
                PENDING_ADMIN: "PENDING_ADMIN";
                PAID: "PAID";
                SHIPPED: "SHIPPED";
                DELIVERED: "DELIVERED";
                CANCELLED: "CANCELLED";
            }>;
            notes: z.ZodOptional<z.ZodString>;
            trackingNumber: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
        paymentProof: z.ZodObject<{
            paymentMethod: z.ZodEnum<{
                card: "card";
                other: "other";
                cash: "cash";
                bank_transfer: "bank_transfer";
                crypto: "crypto";
            }>;
            transactionId: z.ZodOptional<z.ZodString>;
            amount: z.ZodNumber;
            currency: z.ZodString;
            proofImages: z.ZodOptional<z.ZodArray<z.ZodString>>;
            notes: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
    };
    telegram: {
        webhook: z.ZodObject<{
            update_id: z.ZodNumber;
            message: z.ZodOptional<z.ZodObject<{
                message_id: z.ZodNumber;
                from: z.ZodObject<{
                    id: z.ZodNumber;
                    is_bot: z.ZodOptional<z.ZodBoolean>;
                    first_name: z.ZodString;
                    last_name: z.ZodOptional<z.ZodString>;
                    username: z.ZodOptional<z.ZodString>;
                    language_code: z.ZodOptional<z.ZodString>;
                }, z.core.$strip>;
                chat: z.ZodObject<{
                    id: z.ZodNumber;
                    type: z.ZodEnum<{
                        private: "private";
                        channel: "channel";
                        group: "group";
                        supergroup: "supergroup";
                    }>;
                    title: z.ZodOptional<z.ZodString>;
                    username: z.ZodOptional<z.ZodString>;
                    first_name: z.ZodOptional<z.ZodString>;
                    last_name: z.ZodOptional<z.ZodString>;
                }, z.core.$strip>;
                date: z.ZodNumber;
                text: z.ZodOptional<z.ZodString>;
                entities: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    type: z.ZodString;
                    offset: z.ZodNumber;
                    length: z.ZodNumber;
                    url: z.ZodOptional<z.ZodString>;
                    user: z.ZodOptional<z.ZodObject<{
                        id: z.ZodNumber;
                        first_name: z.ZodString;
                    }, z.core.$strip>>;
                }, z.core.$strip>>>;
            }, z.core.$strip>>;
            callback_query: z.ZodOptional<z.ZodObject<{
                id: z.ZodString;
                from: z.ZodObject<{
                    id: z.ZodNumber;
                    first_name: z.ZodString;
                    username: z.ZodOptional<z.ZodString>;
                }, z.core.$strip>;
                message: z.ZodOptional<z.ZodObject<{
                    message_id: z.ZodNumber;
                    chat: z.ZodObject<{
                        id: z.ZodNumber;
                        type: z.ZodEnum<{
                            private: "private";
                            channel: "channel";
                            group: "group";
                            supergroup: "supergroup";
                        }>;
                    }, z.core.$strip>;
                }, z.core.$strip>>;
                data: z.ZodOptional<z.ZodString>;
            }, z.core.$strip>>;
        }, z.core.$strip>;
        sendMessage: z.ZodObject<{
            chat_id: z.ZodUnion<readonly [z.ZodNumber, z.ZodString]>;
            text: z.ZodString;
            parse_mode: z.ZodOptional<z.ZodEnum<{
                Markdown: "Markdown";
                MarkdownV2: "MarkdownV2";
                HTML: "HTML";
            }>>;
            disable_web_page_preview: z.ZodOptional<z.ZodBoolean>;
            disable_notification: z.ZodOptional<z.ZodBoolean>;
            reply_to_message_id: z.ZodOptional<z.ZodNumber>;
            reply_markup: z.ZodOptional<z.ZodObject<{
                inline_keyboard: z.ZodOptional<z.ZodArray<z.ZodArray<z.ZodObject<{
                    text: z.ZodString;
                    callback_data: z.ZodOptional<z.ZodString>;
                    url: z.ZodOptional<z.ZodString>;
                }, z.core.$strip>>>>;
                keyboard: z.ZodOptional<z.ZodArray<z.ZodArray<z.ZodObject<{
                    text: z.ZodString;
                    request_contact: z.ZodOptional<z.ZodBoolean>;
                    request_location: z.ZodOptional<z.ZodBoolean>;
                }, z.core.$strip>>>>;
                resize_keyboard: z.ZodOptional<z.ZodBoolean>;
                one_time_keyboard: z.ZodOptional<z.ZodBoolean>;
                remove_keyboard: z.ZodOptional<z.ZodBoolean>;
            }, z.core.$strip>>;
        }, z.core.$strip>;
    };
    admin: {
        createUser: z.ZodObject<{
            username: z.ZodString;
            email: z.ZodString;
            password: z.ZodString;
            role: z.ZodEnum<{
                OWNER: "OWNER";
                ADMIN: "ADMIN";
                VENDOR: "VENDOR";
                CUSTOMER: "CUSTOMER";
            }>;
            storeId: z.ZodOptional<z.ZodString>;
            firstName: z.ZodOptional<z.ZodString>;
            lastName: z.ZodOptional<z.ZodString>;
            phone: z.ZodOptional<z.ZodString>;
            isActive: z.ZodDefault<z.ZodBoolean>;
        }, z.core.$strip>;
        updateUser: z.ZodObject<{
            username: z.ZodOptional<z.ZodString>;
            email: z.ZodOptional<z.ZodString>;
            role: z.ZodOptional<z.ZodEnum<{
                OWNER: "OWNER";
                ADMIN: "ADMIN";
                VENDOR: "VENDOR";
                CUSTOMER: "CUSTOMER";
            }>>;
            storeId: z.ZodOptional<z.ZodString>;
            firstName: z.ZodOptional<z.ZodString>;
            lastName: z.ZodOptional<z.ZodString>;
            phone: z.ZodOptional<z.ZodString>;
            isActive: z.ZodOptional<z.ZodBoolean>;
        }, z.core.$strip>;
        systemSettings: z.ZodObject<{
            maintenanceMode: z.ZodOptional<z.ZodBoolean>;
            registrationEnabled: z.ZodOptional<z.ZodBoolean>;
            maxStoresPerUser: z.ZodOptional<z.ZodNumber>;
            maxProductsPerStore: z.ZodOptional<z.ZodNumber>;
            maxOrdersPerDay: z.ZodOptional<z.ZodNumber>;
            defaultCurrency: z.ZodOptional<z.ZodString>;
            supportedCurrencies: z.ZodOptional<z.ZodArray<z.ZodString>>;
            rateLimits: z.ZodOptional<z.ZodObject<{
                apiRequestsPerMinute: z.ZodOptional<z.ZodNumber>;
                loginAttemptsPerHour: z.ZodOptional<z.ZodNumber>;
                orderCreationsPerHour: z.ZodOptional<z.ZodNumber>;
            }, z.core.$strip>>;
        }, z.core.$strip>;
    };
    query: {
        pagination: z.ZodObject<{
            page: z.ZodDefault<z.ZodCoercedNumber<unknown>>;
            limit: z.ZodDefault<z.ZodCoercedNumber<unknown>>;
            sortBy: z.ZodOptional<z.ZodString>;
            sortOrder: z.ZodDefault<z.ZodEnum<{
                asc: "asc";
                desc: "desc";
            }>>;
        }, z.core.$strip>;
        search: z.ZodObject<{
            q: z.ZodOptional<z.ZodString>;
            category: z.ZodOptional<z.ZodString>;
            minPrice: z.ZodOptional<z.ZodNumber>;
            maxPrice: z.ZodOptional<z.ZodNumber>;
            inStock: z.ZodOptional<z.ZodCoercedBoolean<unknown>>;
            tags: z.ZodOptional<z.ZodPipe<z.ZodString, z.ZodTransform<string[], string>>>;
        }, z.core.$strip>;
        dateRange: z.ZodObject<{
            startDate: z.ZodOptional<z.ZodCoercedDate<unknown>>;
            endDate: z.ZodOptional<z.ZodCoercedDate<unknown>>;
            timezone: z.ZodOptional<z.ZodString>;
        }, z.core.$strip>;
    };
    response: {
        success: z.ZodObject<{
            success: z.ZodLiteral<true>;
            data: z.ZodAny;
            message: z.ZodOptional<z.ZodString>;
            timestamp: z.ZodString;
        }, z.core.$strip>;
        error: z.ZodObject<{
            success: z.ZodLiteral<false>;
            error: z.ZodString;
            message: z.ZodString;
            details: z.ZodOptional<z.ZodArray<z.ZodString>>;
            timestamp: z.ZodString;
        }, z.core.$strip>;
        paginated: z.ZodObject<{
            success: z.ZodLiteral<true>;
            data: z.ZodArray<z.ZodAny>;
            pagination: z.ZodObject<{
                page: z.ZodNumber;
                limit: z.ZodNumber;
                total: z.ZodNumber;
                totalPages: z.ZodNumber;
                hasNext: z.ZodBoolean;
                hasPrev: z.ZodBoolean;
            }, z.core.$strip>;
            timestamp: z.ZodString;
        }, z.core.$strip>;
    };
};
export declare const createSchemaWithErrors: <T extends z.ZodTypeAny>(schema: T, _customErrors: Record<string, string>) => T;
export declare const sanitizeSchemaOutput: <T>(data: T) => T;
//# sourceMappingURL=validationSchemas.d.ts.map