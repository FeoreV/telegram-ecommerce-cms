version: '3.8'

services:
  database:
    image: mysql:8.0
    container_name: telegram_ecommerce_db_prod
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data_prod:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - telegram_network_prod
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: telegram_ecommerce_redis_prod
    ports:
      - "6379:6379"
    networks:
      - telegram_network_prod
    restart: unless-stopped

  backend:
    image: ${DOCKER_REGISTRY}/telegram-ecommerce-backend:${IMAGE_TAG:-latest}
    container_name: telegram_ecommerce_backend_prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - database
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - telegram_network_prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  bot:
    image: ${DOCKER_REGISTRY}/telegram-ecommerce-bot:${IMAGE_TAG:-latest}
    container_name: telegram_ecommerce_bot_prod
    environment:
      - NODE_ENV=production
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_URL=${API_URL}
      - REDIS_URL=${REDIS_URL}
      - BOT_PORT=3002
    depends_on:
      - backend
      - redis
    networks:
      - telegram_network_prod
    restart: unless-stopped

  frontend:
    image: ${DOCKER_REGISTRY}/telegram-ecommerce-frontend:${IMAGE_TAG:-latest}
    container_name: telegram_ecommerce_frontend_prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - telegram_network_prod
    restart: unless-stopped
    volumes:
      - ./nginx/ssl:/etc/ssl/certs:ro

  nginx:
    image: nginx:alpine
    container_name: telegram_ecommerce_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl/certs:ro
    depends_on:
      - backend
      - frontend
    networks:
      - telegram_network_prod
    restart: unless-stopped

volumes:
  mysql_data_prod:

networks:
  telegram_network_prod:
    driver: bridge
