# Prometheus Configuration for Telegram E-commerce Platform
# Author: BotRT Development Team
# Description: Configuration for scraping metrics from backend and bot services

global:
  scrape_interval: 15s # Default scrape interval
  evaluation_interval: 15s # How frequently to evaluate rules
  external_labels:
    cluster: 'botrt-production'
    environment: 'production'

# Alertmanager configuration (optional)
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - 'alertmanager:9093' # Uncomment to enable alertmanager

# Load rules once and periodically evaluate them
rule_files:
  - 'alerts/*.yml'

# Scrape configurations
scrape_configs:
  # Backend API metrics
  - job_name: 'backend'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['backend:3001']
        labels:
          service: 'backend'
          component: 'api'
    
    # Health check before scraping
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'backend:3001'

  # Bot service metrics (if bot exposes metrics)
  - job_name: 'bot'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['bot:3002']
        labels:
          service: 'bot'
          component: 'telegram'
    
    # Optional: Skip if bot doesn't have metrics endpoint
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node Exporter for system metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
        labels:
          service: 'infrastructure'
          component: 'system'

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'infrastructure'
          component: 'cache'

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'infrastructure'
          component: 'database'

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          service: 'monitoring'
          component: 'prometheus'

  # Grafana monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
        labels:
          service: 'monitoring'
          component: 'visualization'

