#!/bin/bash
# Secret Leak Scanner
# –°–∫–∞–Ω–∏—Ä—É–µ—Ç –∫–æ–¥ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–ª—É—á–∞–π–Ω–æ –∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã—Ö —Å–µ–∫—Ä–µ—Ç–æ–≤

set -e

echo "üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –Ω–∞ —É—Ç–µ—á–∫–∏ —Å–µ–∫—Ä–µ—Ç–æ–≤..."
echo "==========================================="
echo ""

FOUND_ISSUES=0

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m'

# –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤
declare -a PATTERNS=(
    # API Keys
    "api[_-]?key['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{20,}['\"]"
    "apikey['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{20,}['\"]"

    # Tokens
    "token['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{20,}['\"]"
    "access[_-]?token['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{20,}['\"]"
    "secret[_-]?token['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{20,}['\"]"

    # Passwords (–æ—á–µ–≤–∏–¥–Ω—ã–µ)
    "password['\"]?\s*[:=]\s*['\"][^'\"\s]{8,}['\"]"
    "passwd['\"]?\s*[:=]\s*['\"][^'\"\s]{8,}['\"]"

    # Private Keys
    "private[_-]?key['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{20,}['\"]"
    "-----BEGIN\s+(RSA\s+)?PRIVATE\s+KEY-----"

    # AWS
    "AKIA[0-9A-Z]{16}"
    "aws[_-]?access[_-]?key[_-]?id['\"]?\s*[:=]\s*['\"][A-Z0-9]{20}['\"]"
    "aws[_-]?secret[_-]?access[_-]?key['\"]?\s*[:=]\s*['\"][A-Za-z0-9/+=]{40}['\"]"

    # GitHub
    "ghp_[0-9a-zA-Z]{36}"
    "gho_[0-9a-zA-Z]{36}"
    "github[_-]?token['\"]?\s*[:=]\s*['\"][a-zA-Z0-9]{40}['\"]"

    # Stripe
    "sk_live_[0-9a-zA-Z]{24,}"
    "pk_live_[0-9a-zA-Z]{24,}"

    # Database URLs with passwords
    "postgresql://[^:]+:[^@]{8,}@"
    "mysql://[^:]+:[^@]{8,}@"
)

echo "–°–∫–∞–Ω–∏—Ä—É–µ–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
echo "  - backend/src"
echo "  - bot/src"
echo "  - frontend/src"
echo "  - config/"
echo ""

# –ò—Å–∫–ª—é—á–µ–Ω–∏—è (—Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å)
EXCLUDE_PATTERNS="test|spec|example|mock|fixture|scan-for-secrets"

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
scan_directory() {
    local dir=$1

    if [ ! -d "$dir" ]; then
        return
    fi

    echo "–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: $dir"

    for pattern in "${PATTERNS[@]}"; do
        # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω, –∏—Å–∫–ª—é—á–∞—è —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –ø—Ä–∏–º–µ—Ä—ã
        results=$(grep -riE "$pattern" "$dir" \
            --exclude-dir=node_modules \
            --exclude-dir=dist \
            --exclude-dir=build \
            --exclude-dir=.git \
            --exclude="*.log" \
            --exclude="*.lock" \
            --exclude="*.json.map" \
            --exclude="package-lock.json" \
            --exclude="pnpm-lock.yaml" \
            | grep -vE "$EXCLUDE_PATTERNS" \
            || true)

        if [ -n "$results" ]; then
            echo -e "${RED}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã:${NC}"
            echo "$results"
            echo ""
            FOUND_ISSUES=$((FOUND_ISSUES + 1))
        fi
    done
}

# –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
scan_directory "backend/src"
scan_directory "bot/src"
scan_directory "frontend/src"
scan_directory "config"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤ –≤ git
echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤ –≤ git..."
if git ls-files | grep -E "^\.env$|\.env\.production$|\.env\.local$" > /dev/null 2>&1; then
    echo -e "${RED}‚ùå –ö–†–ò–¢–ò–ß–ù–û: .env —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã –≤ git!${NC}"
    git ls-files | grep -E "^\.env"
    echo ""
    echo "–£–¥–∞–ª–∏—Ç–µ –∏—Ö –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ:"
    echo "  git rm --cached .env"
    echo "  git commit -m 'Remove .env from git'"
    FOUND_ISSUES=$((FOUND_ISSUES + 1))
else
    echo -e "${GREEN}‚úÖ .env —Ñ–∞–π–ª—ã –Ω–µ –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –≤ git${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ git –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∫–æ–º–º–∏—Ç–æ–≤)
echo ""
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–º–º–∏—Ç–æ–≤ –Ω–∞ —Å–µ–∫—Ä–µ—Ç—ã..."
RECENT_SECRETS=$(git log -10 --all --full-history -p | grep -E "password|secret|token|api_key" | grep -vE "PASSWORD|SECRET|TOKEN|API_KEY|Test|test" || true)

if [ -n "$RECENT_SECRETS" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–º–º–∏—Ç–∞—Ö:${NC}"
    echo "$RECENT_SECRETS" | head -20
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –±—ã–ª–∏ –ª–∏ —Å–ª—É—á–∞–π–Ω–æ –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã."
fi

# –ò—Ç–æ–≥–∏
echo ""
echo "==========================================="
echo "–†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–ö–ê–ù–ò–†–û–í–ê–ù–ò–Ø"
echo "==========================================="

if [ $FOUND_ISSUES -gt 0 ]; then
    echo -e "${RED}‚ùå –ù–∞–π–¥–µ–Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º: $FOUND_ISSUES${NC}"
    echo ""
    echo "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è"
    echo "2. –£–¥–∞–ª–∏—Ç–µ –ª—é–±—ã–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ –∫–æ–¥–∞"
    echo "3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "4. –ï—Å–ª–∏ —Å–µ–∫—Ä–µ—Ç—ã —É–∂–µ –≤ git:"
    echo "   - –ò–∑–º–µ–Ω–∏—Ç–µ –≤—Å–µ —Å–∫–æ–º–ø—Ä–æ–º–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–µ–∫—Ä–µ—Ç—ã"
    echo "   - –û—á–∏—Å—Ç–∏—Ç–µ git history: git filter-branch –∏–ª–∏ BFG Repo-Cleaner"
    exit 1
else
    echo -e "${GREEN}‚úÖ –°–µ–∫—Ä–µ—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã${NC}"
    echo "   –ö–æ–¥ –±–µ–∑–æ–ø–∞—Å–µ–Ω –¥–ª—è –∫–æ–º–º–∏—Ç–∞."
    exit 0
fi

